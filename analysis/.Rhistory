expColNames <- c("runId", "phase", "stim", "stimCat", "trialType", "blockType", "miniBlock",
"memCond","response", "sbjResp", "sbjACC", "sbjRT", "catachTrial")
length(expColNames)
rm(list=ls())
library(tidyverse)
dataDir <- "X:/public_html/decodeCC_v1/data/v1_batches"
setwd(dataDir)
fileList <- list.files(path = dataDir, pattern = "*.log")
expColNames <- c("runId", "phase", "stim", "stimCat", "trialType", "blockType", "miniBlock",
"memCond","response", "sbjResp", "sbjACC", "sbjRT", "catachTrial")
workerIdList <- c("")
SCNT <- 0
i=1
mydata <- as.matrix(read_csv(fileList[i], col_names = FALSE, col_types = cols(.default = col_integer())))
mydata <- matrix(mydata, byrow = FALSE, ncol = length(expColNames))
mydata$runId <- mydata$runId +1
mydata <- as.tibble(mydata)
mydata <- as.tibble(mydata)
mydata$runId <- mydata$runId +1
mydata
colnames(mydata) <- expColNames
mydata$runId <- mydata$runId +1
mydata
p1Data <- mydata %>% filter(runId <=2)
p1Data
View(p1Data)
colnames(p2Data)
p1Data <- mydata %>% filter(runId <=2)
p2Data <- mydata %>% filter(runId ==4|runId ==5)
p3Data <- mydata %>% filter(runId >=6)
colnames(p2Data)[7]
colnames(p2Data)["minBlock"] <-
"task'"
"task"
colnames(p2Data)["minBlock"] <- "task"
colnames(p2Data)[7] <- "task"
colnames(p2Data)[7] <- "task"
colnames(p2D$blockType) <- "task"
p2D
p2Data <- mydata %>% filter(runId ==4|runId ==5)
colnames(p2Data$stimCat) <-
"swProb"
p1Data <- mydata %>% filter(runId <=2)
p2Data <- mydata %>% filter(runId ==4|runId ==5)
p3Data <- mydata %>% filter(runId >=6)
colnames(colnames(p2Daata)=="blockType") <- "task"
colnames(colnames(p2Data)=="blockType") <- "task"
colnames(colnames(p2Data)=="stimCat") <- "swProb"
p2Data
colnames(colnames(p2Data)=="blockType")
colnames(p2Data)
colnames(p2Data)=="blockType"
colnames(colnames(p2Data)=="blockType") <- "task"
colnames(which(colnames(p2Data)=="blockType") <- "task"
)
colnames(which(colnames(p2Data)=="blockType")) <- "task"
colnames(p2Data)[colnames(p2Data)=="blockType"] <- "task"
colnames(p2Data)[colnames(p2Data)=="stimCat"] <- "swProb"
p2Data
p3Data[which(p3Data$memCond==1),"blockType", "trialType"]
p3Data %>% filter(memCond==1)
p3Data %>% filter(memCond==1) %>% .(blockType)=0 %>% .(trialType)=1
p3Data %>% filter(memCond==1) %>% .(blockType) <- 0 %>% .(trialType) <- 1
p3Data %>% filter(memCond==1) %>% .(blockType) <- 0
p3Data %>% filter(memCond==1)
p3Data %>% filter(memCond==1) %>% .(blockType)
p3Data %>% filter(memCond==1) %>% .$blockType <- 1
p3Data %>% filter(memCond==1) %>% (.$blockType) <- 1
p3Data %>% filter(memCond==1) %>%
(.$blockType) =1
p3Data %>% filter(memCond==1) %>% mean(.$blockType)
p3Data %>% filter(memCond==1) %>% mean(.$RT)
p3Data %>% filter(memCond==1)
p3Data %>% filter(memCond==1) %>% mean(.$sbjRT)
p3Data %>% filter(memCond==1) %>% .$sbjRT
p3Data %>% filter(memCond==1) %>% .$blockType
p3Data %>% filter(memCond==1) %>% .$blockType <- 0
p3Data %>% filter(memCond==1) %>% .$blockType
p3Data %>% filter(memCond==1) %>% .$blockType=1
p3Data %>% filter(memCond==1) %>% .$blockType==1
p3Data %>% filter(memCond==1) %>% .$blockType <- 1
p3Data %>% .$blockType
p3Data %>% .$blockType <- 1
p3Data %>% .$blockType =1
p3Data$blockType <- p3Data %>% filter(memCond==1)
p3Data %>% filter(memCond==1)
p3Data %>% filter(memCond==1) %>% .$blockType
p3Data$blockType %>% filter(memCond==1)  <- 1
p3Data %>% filter(memCond==1)
p3Data %>% filter(memCond==1) %>% mutate(.$blockType=1)
p3Data %>% filter(memCond==1) %>% mutate(.$blockType)
p3Data %>% filter(memCond==1) %>% mutate(.$blockType,1)
p3Data %>% filter(memCond==1) %>% mutate(blockType = replace(blockType,1))
p3Data mutate(blockType = replace(blockType,memCond==1))
p3Data %>% mutate(blockType = replace(blockType,memCond==1))
p3Data %>% mutate(blockType = replace(blockType,memCond==1,1))
View(p3Data)
p3Data <- p3Data %>% mutate(blockType = replace(blockType,memCond==1,1))
p3Data <- p3Data %>% mutate(blockType = replace(blockType, memCond==c(1,2), 1,0)) %>%
p3Data <- p3Data %>% mutate(blockType = replace(blockType, memCond==c(1,2), c(1,0)))
p3Data <- p3Data %>% mutate(blockType = replace(blockType, memCond==1, 1)
p3Data %>% mutate(blockType = replace(blockType,memCond==1,1)) %>%
p3Data %>% mutate(blockType = replace(blockType,memCond==1,1))
p3Data
p3Data <- mydata %>% filter(runId >=6)
p3Data %>% mutate(blockType = replace(blockType,memCond==1,1))
View(p3Data)
help(mutate)
mutate(p3Data, blockType = replace(blockType, memCond==1, 1))
mutate(p3Data, blockType = replace(blockType, memCond==1, 1))
p3Data <- mutate(p3Data, blockType = replace(blockType, memCond==1, 1)) %>%
mutate(p3Data, blockType = replace(trialType, memCond==2, 0)) %>%
mutate(p3Data, blockType = replace(trialType, memCond==3, 1)) %>%
mutate(p3Data, blockType = replace(trialType, memCond==4, 0))
p3Data <- mydata %>% filter(runId >=6)
p3Data <- mutate(p3Data, blockType = replace(blockType, memCond==1, 1)) %>%
mutate(p3Data, blockType = replace(blockType, memCond==2, 0)) %>%
mutate(p3Data, blockType = replace(blockType, memCond==3, 1)) %>%
mutate(p3Data, blockType = replace(blockType, memCond==4, 0))
p3Data <- mydata %>% filter(runId >=6)
mutate(p3Data, blockType = replace(blockType, memCond==1, 1))
p3Data
p3Data <- mutate(p3Data, blockType = replace(blockType, memCond==1, 1))
p3Data
p1Data$sbjId <- SCNT
gpM1 <- tibble()
gpM2 <- tibble()
gpM3 <- tibble()
gpM1
gpM1 <- bind_rows(gpM1, p1Data)
gpM1
fileNameTemp <- strsplit(fileList[i], "\\.")
logFileName  <- fileNameTemp[[1]][1]
fileList2 <- list.files(dataDir, pattern = paste(logFileName, ".txt", sep = ""))
batchInfo <- read_csv(fileList2, col_names = FALSE, sep = ":", col_types = cols(.default = col_character())))
batchInfo <- read_csv(fileList2, col_names = FALSE, sep = ":", col_types = cols(.default = col_character()))
batchInfo <- read_delim(fileList2, delim = ":", col_names = FALSE, sep = ":", col_types = cols(.default = col_character()))
batchInfo <- read_delim(fileList2, delim = ":", col_names = FALSE, col_types = cols(.default = col_character()))
batchInfo
batchInfo[which(batchInfo[,1]=="workerId"),2]
getwd()
source('~/YCCProjects/decodeCC/analysis/step1_gatherData.R')
currentDir
rm(list=ls())
quit()
rm(list=ls())
library(tidyverse)
currentDir <-  getwd()
currentDir
source('~/YCCProjects/decodeCC/analysis/step1_gatherData.R')
quit()
